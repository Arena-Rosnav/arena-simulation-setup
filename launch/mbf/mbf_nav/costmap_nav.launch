<launch>

    <arg name="model" default="" />
    <arg name="train_mode" default="false" />

    <arg name="namespace" />
    <arg name="frame" />
    <arg name="speed" default="2" />

    <arg name="inter_planner" />
    <arg name="local_planner" />

    <arg name="agent_name" default="$(arg model)" if="$(eval arg('local_planner') == 'rosnav')" />

    <arg name="SIMULATOR" default=""/>

    <include file="$(find arena_simulation_setup)/launch/mbf/planners/local/mbf_$(arg local_planner).launch">
        <arg name="model" value="$(arg model)" />
        <arg name="speed" value="$(arg speed)" />
        <arg name="train_mode" value="$(arg train_mode)" if="$(eval arg('local_planner') == 'rosnav')" />
        <arg name="agent_name" value="$(arg agent_name)" if="$(eval arg('local_planner') == 'rosnav')" />
        <arg name="SIMULATOR" value="$(arg SIMULATOR)" if="$(eval arg('local_planner') == 'rosnav')" />
        <arg name="namespace" value="$(arg namespace)" />
        <arg name="frame" value="$(arg frame)" if="$(eval arg('local_planner') != 'rosnav')" /> 
    </include>

    <include file="$(find arena_simulation_setup)/launch/mbf/planners/inter/mbf_$(arg inter_planner).launch">
        <arg name="model" value="$(arg model)" />
        <arg name="speed" value="$(arg speed)" />
        <arg name="namespace" value="$(arg namespace)" />
        <arg name="frame" value="$(arg frame)" />
    </include>

    <!-- move_base -->
    <group>

        <!--
            to disable cmd_vel masking, add
                <node name="mbf_cmd_vel_relay" pkg="topic_tools" type="relay" args="cmd_vel_internal cmd_vel" />
            at the top of every launch file that doesn't need to override the move_base_flex node cmd_vel output
        -->
        <remap from="cmd_vel" to="cmd_vel_internal" />

        <node pkg="mbf_costmap_nav" type="mbf_costmap_nav" respawn="false" name="move_base_flex"
            output="log">
            <!-- system defaults -->
            <rosparam file="$(find arena_simulation_setup)/configs/mbf/move_base_params.yaml"
                command="load" subst_value="True" />
            <rosparam
                file="$(find arena_simulation_setup)/configs/costmaps/costmap_common_params.yaml"
                command="load" ns="global_costmap" subst_value="True" />
            <rosparam
                file="$(find arena_simulation_setup)/configs/costmaps/costmap_common_params.yaml"
                command="load" ns="local_costmap" subst_value="True" />
            <rosparam
                file="$(find arena_simulation_setup)/configs/costmaps/global_costmap_params.yaml"
                command="load" ns="global_costmap" subst_value="True" />
            <rosparam
                file="$(find arena_simulation_setup)/configs/costmaps/local_costmap_params.yaml"
                command="load" ns="local_costmap" subst_value="True" />

            <!-- robot overrides -->
            <rosparam
                file="$(find arena_simulation_setup)/entities/robots/$(arg model)/configs/mbf/move_base_params.yaml"
                command="load" subst_value="True"
                if="$(eval arg('model') != '')"
            />
            <rosparam
                file="$(find arena_simulation_setup)/entities/robots/$(arg model)/configs/costmaps/costmap_common_params.yaml"
                command="load" ns="global_costmap" subst_value="True"
                if="$(eval arg('model') != '')"
            />
            <rosparam
                file="$(find arena_simulation_setup)/entities/robots/$(arg model)/configs/costmaps/costmap_common_params.yaml"
                command="load" ns="local_costmap" subst_value="True"
                if="$(eval arg('model') != '')"
            />
            <rosparam
                file="$(find arena_simulation_setup)/entities/robots/$(arg model)/configs/costmaps/global_costmap_params.yaml"
                command="load" ns="global_costmap" subst_value="True"
                if="$(eval arg('model') != '')"
            />
            <rosparam
                file="$(find arena_simulation_setup)/entities/robots/$(arg model)/configs/costmaps/local_costmap_params.yaml"
                command="load" ns="local_costmap" subst_value="True"
                if="$(eval arg('model') != '')"
            />

            <param name="base_global_planner" value="NavfnROS" />
            
            <remap from="/clock" to="/$(arg namespace)/clock" if="$(eval local_planner == 'rosnav' and train_mode == true)"/>
        </node>
    </group>

    <node name="move_base_legacy_relay" pkg="mbf_costmap_nav" type="move_base_legacy_relay.py">

        <remap from="~base_global_planner" to="move_base_flex/base_global_planner" />
        <remap from="~base_local_planner" to="move_base_flex/base_local_planner" />

        <!-- TODO rewrite relay to not overwrite existing params -->
        <rosparam file="$(find arena_simulation_setup)/configs/mbf/move_base_params.yaml"
            command="load" subst_value="True" />
        <rosparam
            file="$(find arena_simulation_setup)/entities/robots/$(arg model)/configs/mbf/move_base_params.yaml"
            command="load" subst_value="True"
            if="$(eval arg('model') != '')"
        />

        <!-- <rosparam
            file="$(find arena_simulation_setup)/configs/mbf/move_base_params_drl.yaml"
            command="load" subst_value="True"
            if="$(eval arg('local_planner') == 'rosnav')"
        /> -->

        <!-- <remap from="/clock" to="/$(arg namespace)/clock" if="$(eval local_planner == 'rosnav' and train_mode == true)"/> -->
    </node>

    
</launch>